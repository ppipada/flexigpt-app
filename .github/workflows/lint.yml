name: Lint

on:
  push:
    branches:
      - main
  pull_request:

#
# Cancel outdated runs for the same branch / PR
#
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  go:
    name: Go - lint
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set-up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Prepare embed placeholder
        run: |
          PLACEHOLDER="frontend/dist/client/.ci-placeholder"
          mkdir -p "$(dirname "$PLACEHOLDER")"
          touch "$PLACEHOLDER"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          args: --verbose

      - name: Cache modernize binary
        id: cache-modernize
        uses: actions/cache@v4
        with:
          path: ~/go/bin/modernize
          key: modernize-bin-${{ runner.os }}-v1 # bump vN to force a rebuild

      - name: Install modernize (if cache missed)
        if: steps.cache-modernize.outputs.cache-hit != 'true'
        run: go install golang.org/x/tools/gopls/internal/analysis/modernize/cmd/modernize@latest

      - name: Go modernize
        shell: bash
        run: ./scripts/lint_gopls_modernize.sh

      - name: Remove embed placeholder
        if: ${{ always() }}
        run: rm -f frontend/dist/client/.ci-placeholder

  node:
    name: Node - knip / eslint
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set-up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Set-up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: lint
        run: pnpm -F frontend run lint
