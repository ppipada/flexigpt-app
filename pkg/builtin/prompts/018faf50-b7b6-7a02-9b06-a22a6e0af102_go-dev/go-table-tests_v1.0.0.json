{
	"schemaVersion": "2025-07-01",
	"id": "018faf50-b7b6-7d01-9f0a-a22a6e0af106",
	"displayName": "Go Table-Driven Tests (stdlib-only)",
	"slug": "go-table-tests",
	"isEnabled": true,
	"description": "Scaffold idiomatic table-driven tests for a given function.",
	"tags": ["golang", "testing", "table-driven"],
	"blocks": [
		{ "id": "sys", "role": "system", "content": "<sys/>" },
		{
			"id": "dev",
			"role": "developer",
			"content": "## ðŸ§ª Task\nWrite a *_test.go* file that covers normal, edge, error and (if relevant) concurrency cases.\n\n## âœ… Checklist\n- Use `testing` from stdlib only.\n- Table struct: `{name string, input <T>, want <T>, wantErr bool}`.\n- Loop `t.Run(tc.name, ...)` over the table.\n\n## ðŸ”– Example Skeleton\n```go\nfunc TestAdd(t *testing.T) {\n  tests := []struct {\n    name    string\n    a, b    int\n    want    int\n  }{\n    {\"simple\", 1, 2, 3},\n  }\n  for _, tc := range tests {\n    t.Run(tc.name, func(t *testing.T) {\n      if got := Add(tc.a, tc.b); got != tc.want {\n        t.Errorf(\"got %d, want %d\", got, tc.want)\n      }\n    })\n  }\n}\n```\n---"
		},
		{
			"id": "usr",
			"role": "user",
			"content": "<function signature=\"{{FuncSignature}}\" focus=\"{{Focus}}\">{{ExtraNotes}}</function>"
		}
	],
	"variables": [
		{
			"name": "FuncSignature",
			"type": "string",
			"required": true,
			"source": "user"
		},
		{
			"name": "Focus",
			"type": "enum",
			"required": true,
			"source": "user",
			"enumValues": ["normal", "edge", "error", "concurrency"]
		},
		{
			"name": "ExtraNotes",
			"type": "string",
			"required": false,
			"source": "user"
		}
	],
	"version": "v1.0.0",
	"createdAt": "2024-06-06T00:00:00Z",
	"modifiedAt": "2024-06-06T00:00:00Z",
	"isBuiltIn": true
}
