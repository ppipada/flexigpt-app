{
	"name": "flexigpt",
	"version": "1.0.0",
	"private": true,
	"type": "module",
	"main": "build/main.js",
	"repository": {
		"type": "git",
		"url": "https://github.com/ppipada/flexigpt-app.git"
	},
	"author": "Pankaj Pipada <ppipada@gmail.com>",
	"description": "FlexiGPT - An AI application platform",
	"scripts": {
		"touch:tmp": "node -e \"require('fs-extra').ensureFileSync('frontend/dist/client/a.tmp')\"",
		"build:frontend": "pnpm -F frontend run build:wails",
		"types:frontend": "pnpm -F frontend run typecheck",
		"check:version": "node -e \"const t=process.env.VERSION_TAG;if(!t){console.error('VERSION_TAG not set');process.exit(1);}if(!/^v\\d+\\.\\d+\\.\\d+$/.test(t)){console.error('VERSION_TAG must match vX.Y.Z');process.exit(1);}\"",
		"build:linux": "cd ./cmd/agentgo && pnpm run build:frontend && pnpm run check:version && wails build -m -clean -s -skipbindings -tags webkit2_41 -platform linux/amd64 -ldflags=\"-X main.Version=$VERSION_TAG\"",
		"build:mac": "cd ./cmd/agentgo && pnpm run build:frontend && pnpm run check:version && wails build -m -clean -s -skipbindings -platform darwin/universal -ldflags=\"-X main.Version=$VERSION_TAG\"",
		"build:win": "cd ./cmd/agentgo && pnpm run build:frontend && pnpm run check:version && wails build -m -clean -s -skipbindings -nsis -platform windows/amd64 -ldflags=\"-X main.Version=$VERSION_TAG\"",
		"pack:flatpak": "gh act workflow_dispatch -W './.github/workflows/flatpak.yml' --artifact-server-path ./out --input tag=v0.0.1",
		"pack:nsis": "gh act workflow_dispatch -W './.github/workflows/nsispak.yml' --artifact-server-path ./out --input tag=v0.0.1",
		"pack:macpkg": "gh act workflow_dispatch -W './.github/workflows/macpkg.yml' --artifact-server-path ./out --input tag=v0.0.1",
		"build:withbindings": "pnpm run touch:tmp && cd ./cmd/agentgo && wails build -devtools -m -clean -v 2 -ldflags=\"-X main.Version=v0.0.1\"",
		"run:watch": "cd ./cmd/agentgo && pnpm run build:frontend && wails dev -s -v 2 -tags webkit2_41 -ldflags=\"-X main.Version=v0.0.1\"",
		"run:gobackend": "./scripts/run_backend.sh",
		"lint:godotfix": "golangci-lint run --fix --enable-only=godot",
		"lint:gopls": "./scripts/lint_gopls_check.sh",
		"lint:goci": "golangci-lint run ./... -v && ./scripts/lint_gopls_modernize.sh",
		"lint": "pnpm -F frontend run lint && pnpm run lint:goci",
		"test:go": "go test ./...",
		"test": "pnpm -F frontend run test && pnpm run test:go",
		"lt": "pnpm run lint && pnpm run test",
		"lint:gosort": "refdir --const-dir=up --var-dir=up --type-dir=up --recvtype-dir=up --func-dir=down ./..."
	},
	"packageManager": "pnpm@10.13.1+sha512.37ebf1a5c7a30d5fabe0c5df44ee8da4c965ca0c5af3dbab28c3a1681b70a256218d05c81c9c0dcf767ef6b8551eb5b960042b9ed4300c59242336377e01cfad",
	"devDependencies": {
		"fs-extra": "^11.3.0"
	},
	"pnpm": {
		"overrides": {
			"brace-expansion@1": "^1.1.12",
			"brace-expansion@2": "^2.0.2"
		},
		"onlyBuiltDependencies": [
			"@tailwindcss/oxide",
			"esbuild",
			"oxc-resolver"
		]
	}
}
