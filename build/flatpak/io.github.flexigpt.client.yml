id: io.github.flexigpt.client
runtime: org.gnome.Platform
runtime-version: "48"
sdk: org.gnome.Sdk

command: FlexiGPT

finish-args:
  - --share=ipc
  - --socket=wayland
  - --socket=fallback-x11
  - --device=dri
  - --share=network
  - --talk-name=org.freedesktop.secrets
  - --talk-name=com.canonical.AppMenu.Registrar
  - --filesystem=host
  # keep client-side decorations. Ubuntu mate has csd stripping and injects some gtk libs like appmenu,canberra etc
  - --env=GTK_CSD=1
  # block the hostâ€™s nocsd shim
  - --unset-env=LD_PRELOAD

  # disable WebKit accelerated compositing for nvidia drivers.
  # - --env=WEBKIT_DISABLE_COMPOSITING_MODE=1
  # This should not be enabled here as this is a issue in nvidia + x11 + legacy window manager combination
  # - IF you use Nvidia propriety drivers, you will face a DMA buf issue. Below are the issue links and workaround for it:
  # - Upstream bugs:
  #   - [Webkit issue 180739](https://bugs.webkit.org/show_bug.cgi?id=180739)
  #   - [Webkit issue 262607](https://bugs.webkit.org/show_bug.cgi?id=262607)
  #   - [Debian issue 1082139](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1082139)
  #   - [Wails issue 2977](https://github.com/wailsapp/wails/issues/2977)
  #  - You can workaround this by running the app as:
  #    - `WEBKIT_DISABLE_COMPOSITING_MODE=1 flatpak run io.github.flexigpt.client`.
  #    - OR use `WEBKIT_DISABLE_DMABUF_RENDERER=1` instead in above run command.
  #    - OR if you are ok with making system chnages:
  #      - `cat /sys/module/nvidia_drm/parameters/modeset`
  #      - If you see printed N then you need to enable it with: `echo options nvidia_drm modeset=1 | sudo tee /etc/modprobe.d/nvidia_drm.conf`
  #      - Restart machine

cleanup-commands:
  - "rm -rf /app/sdk/golang"
  - "rm -rf /app/go/bin"
  - "rm -rf /app/sdk/node"
  - "rm -rf /app/xdgdirs"

build-options:
  build-args:
    - --share=network
  env:
    - GOROOT=/app/sdk/golang
    - GOBIN=/app/go/bin
    - CGO_ENABLED=0
    - NODEROOT=/app/sdk/node
    - XDG_CONFIG_HOME=/app/xdgdirs/config
    - XDG_DATA_HOME=/app/xdgdirs/data

modules:
  # - shared-modules/libsecret/libsecret.json
  - name: golang
    buildsystem: simple
    build-commands:
      - mkdir -p $GOROOT
      - mv $(pwd)/* $GOROOT
    sources:
      - type: archive
        url: https://go.dev/dl/go1.25.0.linux-amd64.tar.gz
        sha256: 2852af0cb20a13139b3448992e69b868e50ed0f8a1e5940ee1de9e19a123b613

  - name: nodejs
    buildsystem: simple
    build-commands:
      - mkdir -p $NODEROOT
      - mv $(pwd)/* $NODEROOT
    sources:
      - type: archive
        url: https://nodejs.org/dist/v22.19.0/node-v22.19.0-linux-x64.tar.xz
        sha256: c0649af18e6a24f6fe5535a3e86b341dd49a8e71117c8b68bde973ef834f16f2

  - name: pnpm
    buildsystem: simple
    build-commands:
      - PATH=$PATH:$GOROOT/bin:$NODEROOT/bin npm install -g pnpm

  - name: wails
    buildsystem: simple
    build-commands:
      - $GOROOT/bin/go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2

  - name: FlexiGPT
    buildsystem: simple
    build-commands:
      - chmod +x build/flatpak/build_flatpak.sh
      - ./build/flatpak/build_flatpak.sh
    sources:
      - type: dir
        path: ../../
